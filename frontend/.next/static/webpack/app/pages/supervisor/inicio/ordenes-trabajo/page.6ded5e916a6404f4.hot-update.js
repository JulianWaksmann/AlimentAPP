"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/pages/supervisor/inicio/ordenes-trabajo/page",{

/***/ "(app-pages-browser)/./src/app/api/produccion.ts":
/*!***********************************!*\
  !*** ./src/app/api/produccion.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GetOrdenesProduccion: () => (/* binding */ GetOrdenesProduccion),\n/* harmony export */   UpdateEstadoOrdenProduccion: () => (/* binding */ UpdateEstadoOrdenProduccion)\n/* harmony export */ });\nconst apiUrl = \"https://eldzogehdj.execute-api.us-east-1.amazonaws.com/prd\";\nasync function GetOrdenesProduccion() {\n    const response = await fetch(\"\".concat(apiUrl, \"/orden-produccion\"), {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    if (!response.ok) {\n        throw new Error(\"Error fetching productos\");\n    }\n    const data = await response.json();\n    console.log(data);\n    return data.ordenes_produccion;\n}\nasync function UpdateEstadoOrdenProduccion(id, nuevoEstado) {\n    const response = await fetch(\"\".concat(apiUrl, \"/orden-produccion/\").concat(id), {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            estado_orden_produccion: nuevoEstado\n        })\n    });\n    if (!response.ok) {\n        throw new Error(\"Error updating orden de produccion\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvYXBpL3Byb2R1Y2Npb24udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxNQUFNQSxTQUFTQyw0REFBK0I7QUFHdkMsZUFBZUc7SUFDbEIsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLEdBQVUsT0FBUE4sUUFBTyxzQkFBb0I7UUFDekRPLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtRQUNsQjtJQUNGO0lBRUEsSUFBSSxDQUFDSCxTQUFTSSxFQUFFLEVBQUU7UUFDaEIsTUFBTSxJQUFJQyxNQUFNO0lBQ2xCO0lBQ0MsTUFBTUMsT0FBTyxNQUFNTixTQUFTTyxJQUFJO0lBQ2hDQyxRQUFRQyxHQUFHLENBQUNIO0lBQ2YsT0FBT0EsS0FBS0ksa0JBQWtCO0FBQzlCO0FBRVMsZUFBZUMsNEJBQTRCQyxFQUFVLEVBQUVDLFdBQW1CO0lBQzdFLE1BQU1iLFdBQVcsTUFBTUMsTUFBTSxHQUE4QlcsT0FBM0JqQixRQUFPLHNCQUF1QixPQUFIaUIsS0FBTTtRQUMvRFYsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0JBQWdCO1FBQ2xCO1FBQ0FXLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztZQUFFQyx5QkFBeUJKO1FBQVk7SUFDOUQ7SUFDQSxJQUFJLENBQUNiLFNBQVNJLEVBQUUsRUFBRTtRQUNoQixNQUFNLElBQUlDLE1BQU07SUFDbEI7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvbGF1dGFyby9Eb2N1bWVudG9zL3VuZ3MvbGFiby9UUEZJTkFML0FsaW1lbnRBUFAvZnJvbnRlbmQvc3JjL2FwcC9hcGkvcHJvZHVjY2lvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPcmRlblByb2R1Y2Npb24gfSBmcm9tIFwiLi4vbW9kZWxzL09yZGVuUHJvZHVjY2lvblwiO1xuXG5jb25zdCBhcGlVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfVVJMO1xuXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHZXRPcmRlbmVzUHJvZHVjY2lvbigpOiBQcm9taXNlPE9yZGVuUHJvZHVjY2lvbltdPiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHthcGlVcmx9L29yZGVuLXByb2R1Y2Npb25gLCB7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICB9XG4gICAgKTtcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBmZXRjaGluZyBwcm9kdWN0b3NcIik7XG4gICAgfVxuICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgcmV0dXJuIGRhdGEub3JkZW5lc19wcm9kdWNjaW9uO1xuICB9XG5cbiAgICBleHBvcnQgYXN5bmMgZnVuY3Rpb24gVXBkYXRlRXN0YWRvT3JkZW5Qcm9kdWNjaW9uKGlkOiBudW1iZXIsIG51ZXZvRXN0YWRvOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHthcGlVcmx9L29yZGVuLXByb2R1Y2Npb24vJHtpZH1gLCB7XG4gICAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBlc3RhZG9fb3JkZW5fcHJvZHVjY2lvbjogbnVldm9Fc3RhZG8gfSksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgdXBkYXRpbmcgb3JkZW4gZGUgcHJvZHVjY2lvblwiKTtcbiAgICAgICAgfVxuICAgICAgfSJdLCJuYW1lcyI6WyJhcGlVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsIkdldE9yZGVuZXNQcm9kdWNjaW9uIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJvayIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJjb25zb2xlIiwibG9nIiwib3JkZW5lc19wcm9kdWNjaW9uIiwiVXBkYXRlRXN0YWRvT3JkZW5Qcm9kdWNjaW9uIiwiaWQiLCJudWV2b0VzdGFkbyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZXN0YWRvX29yZGVuX3Byb2R1Y2Npb24iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/api/produccion.ts\n"));

/***/ })

});