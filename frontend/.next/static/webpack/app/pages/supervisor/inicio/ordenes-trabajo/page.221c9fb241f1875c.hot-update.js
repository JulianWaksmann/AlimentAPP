"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/pages/supervisor/inicio/ordenes-trabajo/page",{

/***/ "(app-pages-browser)/./src/app/api/produccion.ts":
/*!***********************************!*\
  !*** ./src/app/api/produccion.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GetOrdenesProduccion: () => (/* binding */ GetOrdenesProduccion),\n/* harmony export */   UpdateEstadoOrdenProduccion: () => (/* binding */ UpdateEstadoOrdenProduccion)\n/* harmony export */ });\nconst apiUrl = \"https://eldzogehdj.execute-api.us-east-1.amazonaws.com/prd\";\nasync function GetOrdenesProduccion() {\n    const response = await fetch(\"\".concat(apiUrl, \"/orden-produccion\"), {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    if (!response.ok) {\n        throw new Error(\"Error fetching productos\");\n    }\n    const data = await response.json();\n    console.log(data);\n    return data.ordenes_produccion;\n}\nasync function UpdateEstadoOrdenProduccion(id, nuevoEstado) {\n    const data = {\n        id_orden_produccion: id,\n        estado: nuevoEstado\n    };\n    const response = await fetch(\"\".concat(apiUrl, \"/orden-produccion/update-orden-produccion\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n        throw new Error(\"Error updating orden de produccion\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvYXBpL3Byb2R1Y2Npb24udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxNQUFNQSxTQUFTQyw0REFBK0I7QUFHdkMsZUFBZUc7SUFDbEIsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLEdBQVUsT0FBUE4sUUFBTyxzQkFBb0I7UUFDekRPLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtRQUNsQjtJQUNGO0lBRUEsSUFBSSxDQUFDSCxTQUFTSSxFQUFFLEVBQUU7UUFDaEIsTUFBTSxJQUFJQyxNQUFNO0lBQ2xCO0lBQ0MsTUFBTUMsT0FBTyxNQUFNTixTQUFTTyxJQUFJO0lBQ2hDQyxRQUFRQyxHQUFHLENBQUNIO0lBQ2YsT0FBT0EsS0FBS0ksa0JBQWtCO0FBQzlCO0FBRVMsZUFBZUMsNEJBQTRCQyxFQUFVLEVBQUVDLFdBQW1CO0lBQzdFLE1BQU1QLE9BQU87UUFDYlEscUJBQXFCRjtRQUNyQkcsUUFBUUY7SUFDZDtJQUNNLE1BQU1iLFdBQVcsTUFBTUMsTUFBTSxHQUFVLE9BQVBOLFFBQU8sOENBQTRDO1FBQ2pGTyxRQUFRO1FBQ1JDLFNBQVM7WUFDUCxnQkFBZ0I7UUFDbEI7UUFDQWEsTUFBTUMsS0FBS0MsU0FBUyxDQUFDWjtJQUN2QjtJQUNBLElBQUksQ0FBQ04sU0FBU0ksRUFBRSxFQUFFO1FBQ2hCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9sYXV0YXJvL0RvY3VtZW50b3MvdW5ncy9sYWJvL1RQRklOQUwvQWxpbWVudEFQUC9mcm9udGVuZC9zcmMvYXBwL2FwaS9wcm9kdWNjaW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9yZGVuUHJvZHVjY2lvbiB9IGZyb20gXCIuLi9tb2RlbHMvT3JkZW5Qcm9kdWNjaW9uXCI7XG5cbmNvbnN0IGFwaVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkw7XG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdldE9yZGVuZXNQcm9kdWNjaW9uKCk6IFByb21pc2U8T3JkZW5Qcm9kdWNjaW9uW10+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke2FwaVVybH0vb3JkZW4tcHJvZHVjY2lvbmAsIHtcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgIH1cbiAgICApO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yIGZldGNoaW5nIHByb2R1Y3Rvc1wiKTtcbiAgICB9XG4gICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICByZXR1cm4gZGF0YS5vcmRlbmVzX3Byb2R1Y2Npb247XG4gIH1cblxuICAgIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBVcGRhdGVFc3RhZG9PcmRlblByb2R1Y2Npb24oaWQ6IG51bWJlciwgbnVldm9Fc3RhZG86IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICBpZF9vcmRlbl9wcm9kdWNjaW9uOiBpZCxcbiAgICAgICAgZXN0YWRvOiBudWV2b0VzdGFkb1xuICB9XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7YXBpVXJsfS9vcmRlbi1wcm9kdWNjaW9uL3VwZGF0ZS1vcmRlbi1wcm9kdWNjaW9uYCwge1xuICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciB1cGRhdGluZyBvcmRlbiBkZSBwcm9kdWNjaW9uXCIpO1xuICAgICAgICB9XG4gICAgICB9Il0sIm5hbWVzIjpbImFwaVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BUElfVVJMIiwiR2V0T3JkZW5lc1Byb2R1Y2Npb24iLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsIm9rIiwiRXJyb3IiLCJkYXRhIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJvcmRlbmVzX3Byb2R1Y2Npb24iLCJVcGRhdGVFc3RhZG9PcmRlblByb2R1Y2Npb24iLCJpZCIsIm51ZXZvRXN0YWRvIiwiaWRfb3JkZW5fcHJvZHVjY2lvbiIsImVzdGFkbyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/api/produccion.ts\n"));

/***/ })

});